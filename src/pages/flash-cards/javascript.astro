---
import Layout from "../../layouts/BlogPost.astro";

// Define some flash cards
let flashCards = [
  { question: "Properties (public slots) can now be created via...", answer: "- Instance public fields\n- Static public fields" },
  { question: "Provate slots are new and can be created via", answer: "- Private fields\n (instance and static)\n- Private methods and \naccessors\n(non-static and static)" },
  { question: "What expression checks if obj has a private slot #privateSlot?", answer: "#privateSlot in obj" },
  { question: "What is the syntax for the error.cause subclass?", answer: "new Error (\n'Something went wrong',\n{ cause: otherError }\n)" },
  { question: "What is the output of ['a', 'b', 'c',].at(-1)", answer: "'c'" },
  { question: "What \"indexable\" types have method .at()", answer: "-string\n-array\n-All Typed Array classes:\n Unit8Array etc." },
  { question: "What is the output of 'abbbaab'.replaceAll('b', 'x')", answer: "'axxxaax'" },
  { question: "What are the ECMAScript 2021 assignment operators?", answer: "a ||= b\na &&= b\na ??= b" },
  { question: "What import expression imports all exports of the module 'mod'?", answer: "import * as ns from 'mod'" },
  { question: "What is an exampole of optional chaining?", answer: "value.?prop" },
  { question: "What is the function name to pass parameters in a class?", answer: "constructor()" },
  { question: "What does the syntax of the constructor look like?", answer: "constructor( value ){\nthis.value = value;\n}" },
  { question: "What is the sytnax of the constructor if the class is extended from another class?", answer: "constructor( value ){\nsuper( value );\n}" },
  { question: "How do you enable strict mode on JavaScript documents to enable better error tracking?", answer: "add 'use strict' to the first line\nof the document" },
  { question: "Where should 'use strict' be enabled", answer: "add 'use strict' to the first line\nof the document" },
  { question: "What is a variable?", answer: "A variable is a “named storage”\nfor data." },
  { question: "How do you initiate a prompt?", answer: "result = prompt(\n 'title',\n 'default input'\n);" },
  { question: "How do you initiate a confirm?", answer: "result = confirm(question);" },
  { question: "How do you increment prefix and postfix?", answer: "prefix: ++a\npostfix: b++" },
  { question: "How do you write a conditional ternary sequence?", answer: "let message =\n (age < 3) ? 'Hi, baby!' \:\n (age < 18) ? 'Hello!' \:\n (age < 100) ? 'Greetings!' \:\n 'What an unusual age!';" },
  { question: "What does a Nullish coalescing operator '??' do?", answer: "returns the first argument if it's\nnot null/undefined. Otherwise, the\nsecond one." },
  { question: "What is a callback function?", answer: "A callback function is a function\npassed into another function\nas an argument" },
  { question: "What is a transpiler?", answer: "A transpiler is a special piece of\nsoftware that translates source\ncode to another source code." },
  { question: "How do you copy an object without referencing to the original object?", answer: "let newObject = Object.assign(\n {},\n originalObject\n);" },
  { question: "How can you get the maximum number in an array", answer: "Math.max(...arr);" },
];
---

<Layout
  title="Javascript Flash Cards"
  description="Lorem ipsum dolor sit amet"
  pubDate={new Date("June 06 2024")}
>
  <p>Resources:</p>
  <ul>
    <li><a href="https://javascript.info/" target="_blank">javascript.info</a></li>
    <li><a href="https://exploringjs.com/impatient-js/downloads/impatient-js-preview-book.pdf" target="_blank">JavaScript
      For Impatient Programmers</a></li>
  </ul>
  <p>Click on a card to reveal the answer.</p>
  <div class="flash-cards gap-4 flex flex-wrap">
    {
      flashCards.sort(() => Math.random() - 0.5).map((card) => (
        <div class="card">
          <p class="card-face front">{card.question}</p>
          <pre class="card-face back">{card.answer}</pre>
        </div>
      ))
    }
  </div>
</Layout>

<script is:inline>
  'use strict'
  function flipCard(event) {
    let card = event.target.closest(".card");
    card.classList.toggle("is-flipped");
  }

  document.querySelectorAll(".card").forEach((card) => {
    card.addEventListener("click", flipCard);
  });
</script>

<style>
  .card {
    width: 420px;
    height: 250px;
    perspective: 1000px;
    cursor: pointer;
    max-width: 100%;
}

.card.is-flipped .card-face.front {
    transform: rotateY(180deg);
  }
  .card.is-flipped .card-face.back {
    transform: rotateY(360deg);
  }
  
  .card-face {
      width: 100%;
      height: 100%;
      position: absolute;
      backface-visibility: hidden;
      transition: transform 0.6s linear;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      padding: 1rem;
  }

  .card-face.front {
    background-color: #fff;
  }

  .card-face.back {
    background-color: #f8f8f8;
    transform: rotateY(180deg);
  }
</style>
